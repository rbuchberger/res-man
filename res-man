#! /bin/sh
# shellcheck disable=1090
# Restic Manager
# Robert Buchberger <robert@buchberger.cc>
#                   @robert@spacey.space

set -eu
IFS="

"

prepare() {
	[ -f "$PREPARE_SCRIPT" ] || return 0

	"$PREPARE_SCRIPT" "$JOB_NAME" || error "Prepare script failed"
}

success() {
	[ -f "$ON_SUCCESS" ] || return 0

	"$ON_SUCCESS" "$JOB_NAME" || error "Success script failed"
}

error() {
	EXIT_STATUS=1
	echo "$1" >&2
	[ -f "$ON_ERROR" ] || return 0

	"$ON_ERROR" "$JOB_NAME" "$1" || echo "Error script failed" >&2
}

backup() {
	[ -f "$CONFIG_DIR/${INCLUDE_FILE:-"include"}" ] ||
		(error "Include file not found" && exit 1)

	restic backup \
		--verbose \
		--exclude-caches \
		--one-file-system \
		--files-from "$CONFIG_DIR/${INCLUDE_FILE:-"include"}" \
		--exclude-file "$CONFIG_DIR/${EXCLUDE_FILE:-"exclude"}" ||
		error "Backup error"
}

on_exit() {
	[ -f "$ON_EXIT" ] || return 0

	"$ON_EXIT" "$JOB_NAME" || error "Exit script failed"
}

check() {
	restic check --verbose --read-data-subset "${CHECK_SUBSET:-"2%"}" ||
		error "Check error"
}

forget() {
	restic forget \
		--verbose \
		--keep-last "${KEEP_LAST:-7}" \
		--keep-daily "${KEEP_DAILY:-7}" \
		--keep-weekly "${KEEP_WEEKLY:-4}" \
		--keep-monthly "${KEEP_MONTHLY:-4}" ||
		error "Forget error"
}

prune() {
	restic prune --verbose || error "Prune error"
}

# Mondays
should_check() {
	[ "$(date +%u)" = "${CHECK_DAY:-1}" ]
}

should_prune() {
	# We only prune on check days
	should_check || return 1

	week_of_year=$(date +%W)
	# shellcheck disable=2004
	week_in_sequence=$(($week_of_year % ${PRUNE_WEEKS:-4}))

	[ "$week_in_sequence" = 0 ] || return 1

	[ "$EXIT_STATUS" = 0 ] || (
		echo "It's forget & prune day, but we're skipping it due to a previous error."
		return 1
	)
}

daily() {
	prepare
	backup

	if should_prune; then
		forget || echo "Skipping prune due to forget error" >&2
		# Only prune if forget also succeeded
		[ "$EXIT_STATUS" = 0 ] && prune
	fi

	should_check && (check || error "Check error")

	if [ "$EXIT_STATUS" = "0" ]; then
		success
		echo "Daily job complete"
	else
		echo "Daily job finished with errors."
	fi

	on_exit
}

scaffold() {
	echo "Creating config template for job $JOB_NAME in $CONFIG_DIR"

	if [ -f "$CONFIG_DIR/$JOB_NAME" ]; then
		echo "Job $CONFIG_DIR/$JOB_NAME already exists, skipping"
	else
		install -Dm600 "$TEMPLATE_DIR"/myjob "$CONFIG_DIR/$JOB_NAME"
		echo "Job $JOB_NAME created in $CONFIG_DIR"
	fi

	if [ -f "$CONFIG_DIR/include" ]; then
		echo "Include file $CONFIG_DIR/include already exists, skipping"
	else
		install -Dm644 "$TEMPLATE_DIR"/include "$CONFIG_DIR/include"
		echo "Include file created in $CONFIG_DIR; be sure to modify it as needed."
	fi

	if [ -f "$CONFIG_DIR/exclude" ]; then
		echo "Exclude file $CONFIG_DIR/exclude already exists, skipping"
	else
		install -Dm644 "$TEMPLATE_DIR"/exclude "$CONFIG_DIR/exclude"
		echo "Exclude file created in $CONFIG_DIR; be sure to modify it as needed."
	fi
}

help() {
	echo "Usage: $0 <JOB_NAME> {daily|backup|check|forget|prune}"
	echo "JOB_NAME should be a file located in $CONFIG_DIR which exports all required environment variables"

	exit 1
}

# Setup ------------------------------------------------------------------------
EXIT_STATUS=0
CONFIG_DIR="${RESTIC_CONFIG_DIR:-/etc/restic}"
ON_ERROR=$CONFIG_DIR/${ON_ERROR:-on_error.sh}
ON_SUCCESS=$CONFIG_DIR/${ON_SUCCESS:-on_success.sh}
ON_EXIT=$CONFIG_DIR/${ON_EXIT:-on_exit.sh}
PREPARE_SCRIPT=$CONFIG_DIR/${PREPARE_SCRIPT:-prepare.sh}
JOB_NAME="${1:-}"
[ "$JOB_NAME" = "" ] && help
JOB_FILE=$CONFIG_DIR/$JOB_NAME
TEMPLATE_DIR=${RESTIC_TEMPLATE_DIR:-/usr/share/res-man}

[ "$2" = "scaffold" ] || . "$JOB_FILE" || (error "Job definition $JOB_FILE not found" && help)

case $2 in
backup)
	backup
	;;
check)
	check
	;;
forget)
	forget
	;;
prune)
	prune
	;;
daily)
	daily
	;;
scaffold)
	scaffold
	;;
*)
	help
	;;
esac

exit "$EXIT_STATUS"
